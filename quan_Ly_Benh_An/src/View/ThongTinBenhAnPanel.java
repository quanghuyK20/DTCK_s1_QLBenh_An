/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import ConnectSQL.DataValidator;
import ConnectSQL.MessagaDialog;
import Model.QuanLyBenhAn;
import Model.ThongTin;
import qlba.DAO.ThongTinDao;
import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import qlba.DAO.BenhAnDao;

/**
 *
 * @author Quang Huy
 */
public class ThongTinBenhAnPanel extends javax.swing.JPanel {

    private Menu parentForm;
    private DefaultTableModel tblModel;

    /**
     * Creates new form ChiTietBenhAnPanel
     */
    public ThongTinBenhAnPanel() {
        initComponents();

        initTable();

        loadThongTin();

        txtMaBA.setText(Random() + "");
        txtMabenhnhan.setText(Random() + "");
    }

    int Random() {
        Random rd = new Random();
        int random = 10000 + rd.nextInt(89999);
        return random;
    }

    private void initTable() {
        tblModel = new DefaultTableModel();
        tblModel.setColumnIdentifiers(new String[]{
            "Mã Bệnh Nhân", "Mã Bệnh Án", "Mã Khoa", "Ngày Vào", "Ngày Ra", "Tên Bệnh Nhân", "Tuổi", "Giới Tính", "Chứng Minh Thư", "Quê Quán"
        });
        tblThongTin.setModel(tblModel);
    }

    private void loadThongTin() {

        try {
            ThongTinDao dao = new ThongTinDao();
            List<ThongTin> list = dao.findAll();

            tblModel.setRowCount(0);

            for (ThongTin it : list) {
                tblModel.addRow(new Object[]{
                    it.getMaBenhNhan(), it.getMaBenhAn(), it.getMaKhoa(), it.getNgayVao(), it.getNgayRa(), it.getTenBenhNhan(), it.getTuoi(), it.getGioiTinh() == 1 ? "Nam" : "Nữ", it.getChungMinhThu(), it.getQueQuan()
                });
            }
            tblModel.fireTableDataChanged();
        } catch (Exception e) {
            e.printStackTrace();
            MessagaDialog.showErrorDialog(parentForm, e.getMessage(), "Lỗi");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jbtSearch = new javax.swing.JButton();
        jbtNew = new javax.swing.JButton();
        jbtUpdate = new javax.swing.JButton();
        jbtSave = new javax.swing.JButton();
        jbtDelete = new javax.swing.JButton();
        jComboBox = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtMabenhnhan = new javax.swing.JTextField();
        txtMaBA = new javax.swing.JTextField();
        txtMaKhoa = new javax.swing.JTextField();
        txtTenBN = new javax.swing.JTextField();
        txtTuoi = new javax.swing.JTextField();
        txtCMT = new javax.swing.JTextField();
        txtQueQuan = new javax.swing.JTextField();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        txtVao = new com.toedter.calendar.JDateChooser();
        jLabel13 = new javax.swing.JLabel();
        txtRa = new com.toedter.calendar.JDateChooser();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblThongTin = new javax.swing.JTable();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1336, 872));

        jLabel1.setBackground(new java.awt.Color(51, 51, 255));
        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText(" THÔNG TIN BỆNH ÁN");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Tìm Kiếm");

        txtSearch.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        jbtSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search-icon-24.png"))); // NOI18N
        jbtSearch.setText("Search");
        jbtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSearchActionPerformed(evt);
            }
        });

        jbtNew.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jbtNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/new-icon-16.png"))); // NOI18N
        jbtNew.setText("Tạo mới");
        jbtNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtNewActionPerformed(evt);
            }
        });

        jbtUpdate.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jbtUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/btn_add.png"))); // NOI18N
        jbtUpdate.setText("Cập nhập");
        jbtUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtUpdateActionPerformed(evt);
            }
        });

        jbtSave.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jbtSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Save-icon.png"))); // NOI18N
        jbtSave.setText("Lưu");
        jbtSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSaveActionPerformed(evt);
            }
        });

        jbtDelete.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jbtDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/exit.png"))); // NOI18N
        jbtDelete.setText("Xóa");
        jbtDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtDeleteActionPerformed(evt);
            }
        });

        jComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã Bệnh Nhân", "Mã Bệnh Án", "Mã Khoa", "Tên Bệnh Nhân", "Tuổi", "Giới Tính", "Chứng Minh Thư", " " }));
        jComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(73, 73, 73)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jbtSearch)
                .addGap(41, 41, 41)
                .addComponent(jbtNew)
                .addGap(78, 78, 78)
                .addComponent(jbtUpdate)
                .addGap(74, 74, 74)
                .addComponent(jbtSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addComponent(jbtDelete)
                .addGap(23, 23, 23))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtSearch)
                    .addComponent(jbtNew, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtSave, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jbtUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbtDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Mã Bệnh Nhân");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Mã Bệnh Án");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Mã Khoa");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setText("Tên Bệnh nhân");

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setText("Tuổi");

        jLabel8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel8.setText("Giới tính");

        jLabel9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel9.setText("Chứng Minh Thư");

        jLabel10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel10.setText("Quên quán");

        txtMabenhnhan.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtMabenhnhan.setEnabled(false);
        txtMabenhnhan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMabenhnhanFocusLost(evt);
            }
        });

        txtMaBA.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtMaBA.setEnabled(false);
        txtMaBA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMaBAFocusLost(evt);
            }
        });
        txtMaBA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaBAActionPerformed(evt);
            }
        });

        txtMaKhoa.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtMaKhoa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMaKhoaFocusLost(evt);
            }
        });
        txtMaKhoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaKhoaActionPerformed(evt);
            }
        });

        txtTenBN.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        txtTuoi.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        txtCMT.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtCMT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCMTActionPerformed(evt);
            }
        });

        txtQueQuan.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtQueQuan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQueQuanActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoNam);
        rdoNam.setText("Nam");
        rdoNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoNamActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoNu);
        rdoNu.setText("Nữ");
        rdoNu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoNuActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel11.setText("Ngày vào");

        txtVao.setDateFormatString("yyyy-MM-dd");

        jLabel13.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel13.setText("Ngày ra");

        txtRa.setDateFormatString("yyyy-MM-dd");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMabenhnhan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                            .addComponent(txtMaBA, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtMaKhoa, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtTenBN, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtQueQuan, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCMT, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(rdoNam)
                                .addGap(58, 58, 58)
                                .addComponent(rdoNu)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtTuoi)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtVao, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(txtRa, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMabenhnhan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaBA, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtVao, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(txtRa, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTenBN, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoNam, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdoNu, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCMT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQueQuan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)))
        );

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/benhanDT.jpg"))); // NOI18N
        jLabel12.setText(" ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(69, Short.MAX_VALUE)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 649, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel12)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblThongTin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblThongTin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblThongTinMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblThongTin);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icon_Reload.png"))); // NOI18N
        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator2)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 69, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(508, 508, 508)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(596, 596, 596)
                                .addComponent(jButton1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtQueQuanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQueQuanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQueQuanActionPerformed

    private void txtMaBAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaBAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaBAActionPerformed

    private void txtMaKhoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaKhoaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaKhoaActionPerformed

    private void txtCMTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCMTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCMTActionPerformed

    private void jbtNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtNewActionPerformed
        txtMabenhnhan.setText(Random() + "");
        txtMaBA.setText(Random() + "");
        txtMaKhoa.setText("");
        txtCMT.setText("");
        txtQueQuan.setText("");
        txtTenBN.setText("");
        txtTuoi.setText("");
        txtRa.setCalendar(null);
        txtVao.setCalendar(null);
        buttonGroup1.clearSelection();
        jbtSave.setEnabled(true);
    }//GEN-LAST:event_jbtNewActionPerformed

    private void jbtSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSaveActionPerformed
        StringBuilder sb = new StringBuilder();
        DataValidator.validateEmpty(txtMabenhnhan, sb, "Mã Bệnh Nhân không được để trông ! ");
        DataValidator.validateEmpty(txtMaBA, sb, "Mã Bệnh Án không được để trống !");
        DataValidator.validateEmpty(txtTenBN, sb, "Tên Bệnh Án không được để trống !");

        if (sb.length() > 0) {
            MessagaDialog.showErrorDialog(parentForm, sb.toString(), "Lỗi ");
            return;
        }
        try {
            ThongTin tt = new ThongTin();

            tt.setMaBenhNhan(txtMabenhnhan.getText());
            tt.setMaBenhAn(txtMaBA.getText());
            tt.setMaKhoa(txtMaKhoa.getText());

            Date ns = txtVao.getDate();
            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String Date1 = dateFormat.format(ns);
            tt.setNgayVao(Date1);

            Date ms = txtRa.getDate();
            DateFormat dateFormat1 = new SimpleDateFormat("yyyy-MM-dd");
            String Date2 = dateFormat1.format(ms);
            tt.setNgayRa(Date1);

            tt.setTenBenhNhan(txtTenBN.getText());
            tt.setTuoi(txtTuoi.getText());
            tt.setGioiTinh(rdoNam.isSelected() ? 1 : 0);
            tt.setChungMinhThu(txtCMT.getText());
            tt.setQueQuan(txtQueQuan.getText());

            ThongTinDao dao = new ThongTinDao();
            if (dao.findByMaBN(txtMabenhnhan.getText()) != null) {
                if (MessagaDialog.showConfirmDialog(parentForm, "Bạn có muốn cập nhật bệnh án không ? ", "Hỏi") == JOptionPane.NO_OPTION) {
                    return;
                }
                if (dao.update(tt)) {
                    MessagaDialog.showMessageDialog(parentForm, "Thông Tin Bệnh Án đã được cập nhật !", "Thông Báo");
                } else {
                    MessagaDialog.showMessageDialog(parentForm, "Không thể cập nhật thông tin Bệnh Án !", "Thông Báo");
                }
            } else {
                if (dao.insert(tt)) {
                    MessagaDialog.showMessageDialog(parentForm, "Thông Tin Bệnh Án đã được lưu !", "Thông Báo");
                } else {
                    MessagaDialog.showMessageDialog(parentForm, "Không thể lưu thông tin Bệnh Án !", "Thông Báo");
                }
            }
            loadThongTin();
        } catch (Exception e) {
            e.printStackTrace();
            MessagaDialog.showErrorDialog(parentForm, e.getMessage(), "Lỗi");
        }


    }//GEN-LAST:event_jbtSaveActionPerformed

    private void txtMabenhnhanFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMabenhnhanFocusLost
        try {
            ThongTinDao dao = new ThongTinDao();
            ThongTin tt = dao.findByMaBN(txtMabenhnhan.getText());
            if (tt != null) {
                txtMaBA.setText(tt.getMaBenhAn());
                txtTenBN.setText(tt.getTenBenhNhan());
                txtMaKhoa.setText(tt.getMaKhoa());

                Date date1 = new SimpleDateFormat("yyyy-MM-dd").parse(tt.getNgayVao());
                txtVao.setDate(date1);

                Date date2 = new SimpleDateFormat("yyyy-MM-dd").parse(tt.getNgayRa());
                txtRa.setDate(date2);

                txtTenBN.setText(tt.getTenBenhNhan());
                txtTuoi.setText(tt.getTuoi());

                if ((tt.getGioiTinh() + "").equals("1")) {
                    rdoNam.setSelected(true);
                    rdoNu.setSelected(false);
                } else {
                    rdoNam.setSelected(false);
                    rdoNu.setSelected(true);
                }

                txtCMT.setText(tt.getChungMinhThu());
                txtQueQuan.setText(tt.getQueQuan());

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtMabenhnhanFocusLost

    private void jbtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSearchActionPerformed
        try {
            String a;
            if (jComboBox.getSelectedIndex() == 0) {
                a = "MaBenhNhan";
            } else if (jComboBox.getSelectedIndex() == 1) {
                a = "MaBenhAn";
            } else if (jComboBox.getSelectedIndex() == 2) {
                a = "MaKhoa";
            } else if (jComboBox.getSelectedIndex() == 3) {
                a = "TenBenhNhan";
            } else if (jComboBox.getSelectedIndex() == 4) {
                a = "Tuoi";
            } else if (jComboBox.getSelectedIndex() == 5) {
                a = "GioiTinh";
            } else {
                a = "ChungMinhThu";
            }
            String b = txtSearch.getText();
            List<ThongTin> list = new ThongTinDao().findBy(a, b);
            System.out.println("list size = " + list.size());

            if (list.size() != 0) {
                MessagaDialog.showMessageDialog(parentForm, " Đã tìm thấy thông tin phù hợp !", "Thông Báo ");
                try {

                    tblModel.setRowCount(0);

                    for (ThongTin it : list) {
                        tblModel.addRow(new Object[]{
                            it.getMaBenhNhan(), it.getMaBenhAn(), it.getMaKhoa(), it.getNgayVao(), it.getNgayRa(), it.getTenBenhNhan(), it.getTuoi(), it.getGioiTinh() == 1 ? "Nam" : "Nữ", it.getChungMinhThu(), it.getQueQuan()
                        });
                    }
                    tblModel.fireTableDataChanged();
                } catch (Exception e) {
                    e.printStackTrace();
                    MessagaDialog.showErrorDialog(parentForm, e.getMessage(), "Lỗi");
                }
                txtMabenhnhanFocusLost(null);
                 } else {
                    MessagaDialog.showMessageDialog(parentForm, " Không tìm thấy bệnh nhân phù hợp !", "Thông Báo ");
                }
                    } catch (Exception e) {
                     e.printStackTrace();
                     MessagaDialog.showErrorDialog(parentForm, e.getMessage(), "Lỗi");
                     }

//                txtMabenhnhan.setText(tt.getMaBenhNhan());
//                txtMaBA.setText(tt.getMaBenhAn());
//                txtMaKhoa.setText(tt.getMaKhoa());
//
//                Date date1 = new SimpleDateFormat("yyyy-MM-dd").parse(tt.getNgayVao());
//                txtVao.setDate(date1);
//
//                Date date2 = new SimpleDateFormat("yyyy-MM-dd").parse(tt.getNgayRa());
//                txtRa.setDate(date2);
//
//                if ((tt.getGioiTinh() + "").equals("1")) {
//                    rdoNam.setSelected(true);
//                    rdoNu.setSelected(false);
//                } else {
//                    rdoNam.setSelected(false);
//                    rdoNu.setSelected(true);
//                }
//
//                txtTenBN.setText(tt.getTenBenhNhan());
//                txtTuoi.setText(tt.getTuoi());
//                txtCMT.setText(tt.getChungMinhThu());
//                txtQueQuan.setText(tt.getChungMinhThu());

    }//GEN-LAST:event_jbtSearchActionPerformed

    private void rdoNuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoNuActionPerformed

    }//GEN-LAST:event_rdoNuActionPerformed

    private void rdoNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoNamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoNamActionPerformed

    private void txtMaBAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaBAFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaBAFocusLost

    private void txtMaKhoaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaKhoaFocusLost

    }//GEN-LAST:event_txtMaKhoaFocusLost

    private void jbtUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtUpdateActionPerformed
        StringBuilder sb = new StringBuilder();
        DataValidator.validateEmpty(txtMaBA, sb, "Mã Bệnh Án không được để trống !");
        DataValidator.validateEmpty(txtTenBN, sb, "Tên Bệnh Nhân không được để trống !");

        if (sb.length() > 0) {
            MessagaDialog.showErrorDialog(parentForm, sb.toString(), "Lỗi");
            return;
        }
        if (MessagaDialog.showConfirmDialog(parentForm, "Bạn có muốn cập nhật thông tin Bệnh Án không ? ", "Hỏi") == JOptionPane.NO_OPTION) {
            return;
        }

        try {
            ThongTin tt = new ThongTin();

            tt.setMaBenhNhan(txtMabenhnhan.getText());
            tt.setMaBenhAn(txtMaBA.getText());
            tt.setMaKhoa(txtMaKhoa.getText());

            Date ns = txtVao.getDate();
            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String Date1 = dateFormat.format(ns);
            tt.setNgayVao(Date1);

            Date ms = txtRa.getDate();
            DateFormat dateFormat1 = new SimpleDateFormat("yyyy-MM-dd");
            String Date2 = dateFormat1.format(ms);
            tt.setNgayRa(Date2);

            tt.setTenBenhNhan(txtTenBN.getText());
            tt.setTuoi(txtTuoi.getText());
            tt.setGioiTinh(rdoNam.isSelected() ? 1 : 0);
            tt.setChungMinhThu(txtCMT.getText());
            tt.setQueQuan(txtQueQuan.getText());

            ThongTinDao dao = new ThongTinDao();
            if (dao.update(tt)) {
                MessagaDialog.showMessageDialog(parentForm, "Thông Tin Bệnh Án đã cập nhật thành công !", "Thông báo");
                loadThongTin();
            } else {
                MessagaDialog.showConfirmDialog(parentForm, "Chưa thể cập nhật Thông tin Bệnh Án", "Lỗi");
            }
        } catch (Exception e) {
            e.printStackTrace();
            MessagaDialog.showErrorDialog(parentForm, e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_jbtUpdateActionPerformed

    private void jbtDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtDeleteActionPerformed
        try {
            if (txtMabenhnhan.getText().equals("")) {
                MessagaDialog.showMessageDialog(parentForm, "Bạn cần nhập Mã Bệnh Nhân !", "Lỗi");
                return;
            }

            ThongTinDao dao = new ThongTinDao();
            ThongTin tt = dao.findByMaBN(txtMabenhnhan.getText());
            if (tt == null) {
                MessagaDialog.showMessageDialog(parentForm, "Mã Bệnh Nhân không tồn tại ! ", TOOL_TIP_TEXT_KEY);
                return;
            }
            if (MessagaDialog.showConfirmDialog(parentForm, "Bạn có muốn xóa Thông Tin Bệnh Nhân không !", "Hỏi")
                    == JOptionPane.NO_OPTION) {
                return;
            }
            if (dao.deleteByMaBN(txtMabenhnhan.getText())) {
                MessagaDialog.showMessageDialog(parentForm, "Thông Tin Bệnh Nhân đã được xóa !", "Thông Báo");
            } else {
                MessagaDialog.showMessageDialog(parentForm, "Thông Tin Bệnh Nhân chưa được xóa !", "Thông Báo");
            }
            loadThongTin();
        } catch (Exception e) {
            e.printStackTrace();
            MessagaDialog.showErrorDialog(parentForm, e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_jbtDeleteActionPerformed

    private void tblThongTinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblThongTinMouseClicked
        try {
            jbtSave.setEnabled(false);
            int row = tblThongTin.getSelectedRow();

            if (row >= 0) {
                String id = (String) tblThongTin.getValueAt(row, 0);
                ThongTinDao dao = new ThongTinDao();
                ThongTin tt = dao.findByMaBN(id);

                if (tt != null) {
                    txtMabenhnhan.setText(tt.getMaBenhNhan());
                    txtMaBA.setText(tt.getMaBenhAn());
                    txtMaKhoa.setText(tt.getMaKhoa());

                    Date date1 = new SimpleDateFormat("yyyy-MM-dd").parse(tt.getNgayVao());
                    txtVao.setDate(date1);

                    Date date2 = new SimpleDateFormat("yyyy-MM-dd").parse(tt.getNgayRa());
                    txtRa.setDate(date2);

                    txtTenBN.setText(tt.getTenBenhNhan());
                    txtTuoi.setText(tt.getTuoi());

                    if ((tt.getGioiTinh() + "").equals("1")) {
                        rdoNam.setSelected(true);
                        rdoNu.setSelected(false);
                    } else {
                        rdoNam.setSelected(false);
                        rdoNu.setSelected(true);
                    }

                    txtCMT.setText(tt.getChungMinhThu());
                    txtQueQuan.setText(tt.getQueQuan());
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            MessagaDialog.showErrorDialog(parentForm, e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_tblThongTinMouseClicked

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchKeyPressed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchKeyReleased

    private void jComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        txtSearch.setText("");
        loadThongTin();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JButton jbtDelete;
    private javax.swing.JButton jbtNew;
    private javax.swing.JButton jbtSave;
    private javax.swing.JButton jbtSearch;
    private javax.swing.JButton jbtUpdate;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JTable tblThongTin;
    private javax.swing.JTextField txtCMT;
    private javax.swing.JTextField txtMaBA;
    private javax.swing.JTextField txtMaKhoa;
    private javax.swing.JTextField txtMabenhnhan;
    private javax.swing.JTextField txtQueQuan;
    private com.toedter.calendar.JDateChooser txtRa;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTenBN;
    private javax.swing.JTextField txtTuoi;
    private com.toedter.calendar.JDateChooser txtVao;
    // End of variables declaration//GEN-END:variables
}
