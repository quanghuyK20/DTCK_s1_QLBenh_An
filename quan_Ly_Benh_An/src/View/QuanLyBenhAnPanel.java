/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import ConnectSQL.DataValidator;
import ConnectSQL.MessagaDialog;
import ConnectSQL.SetImage;
import Model.UserData;
import Model.QuanLyBenhAn;
import Model.ThongTin;
import java.awt.Image;
import java.io.File;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Random;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFCellStyle;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import qlba.DAO.BenhAnDao;
import qlba.DAO.ThongTinDao;

/**
 *
 * @author Quang Huy
 */
public class QuanLyBenhAnPanel extends javax.swing.JPanel {

    private Menu parentForm;
    private DefaultTableModel tblModel;
    private byte[] personalImage; //  lưu các nôi dung của hình do người dùng chọn, dùng cho các hoạt động chèn hay nhập dữ liệu

    /**
     * Creates new form QuanLyBenhAnPanel
     */
    public QuanLyBenhAnPanel() {
        initComponents();

        initTable();

        loadDataToTable();
        txtMaBenhAn.setText(Random() + "");
        
    }

    private void initTable() {
        tblModel = new DefaultTableModel();
        tblModel.setColumnIdentifiers(new String[]{"Mã Bệnh Án", "Tên Bệnh Nhân", "Người Phụ Trách", "Emai", "Khoa", "Mô Tả", "Tình Trạng"});
        tblBenhAn.setModel(tblModel);
    }

    private void loadDataToTable() {
        try {
            BenhAnDao dao = new BenhAnDao();
            List<QuanLyBenhAn> list = dao.findAll();
            tblModel.setRowCount(0);
            for (QuanLyBenhAn it : list) {
                tblModel.addRow(new Object[]{
                    it.getMaBenhAn(), it.getTenBenhNhan(), it.getNguoiPhuTrach(), it.getEmail(), it.getKhoa(), it.getMoTa(), it.getTinhTrang() == 1 ? "Đã Ra Viện" : "Chưa Ra Viện"
                });
            }
            tblModel.fireTableDataChanged();
        } catch (Exception e) {
            e.printStackTrace();
            MessagaDialog.showErrorDialog(parentForm, e.getMessage(), " Lỗi");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtMaBenhAn = new javax.swing.JTextField();
        txtTenBenhNhan = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtMoTa = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        lblImage = new javax.swing.JLabel();
        txtChonHinh = new javax.swing.JButton();
        rdbRa = new javax.swing.JRadioButton();
        rdbChua = new javax.swing.JRadioButton();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBenhAn = new javax.swing.JTable();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        txtNguoiPhuTrach = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtKhoa = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jComboBox = new javax.swing.JComboBox<>();
        jbtSearch = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Mã Bệnh Án");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Tên Bệnh Nhân");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Người phụ trách");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Email");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setText("Mô Tả");

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setText("Tình trạng");

        txtMaBenhAn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtMaBenhAn.setEnabled(false);
        txtMaBenhAn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMaBenhAnFocusLost(evt);
            }
        });

        txtTenBenhNhan.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        txtEmail.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        txtMoTa.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Bs.PNG"))); // NOI18N
        lblImage.setText(" ");

        txtChonHinh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/open-file-icon-16.png"))); // NOI18N
        txtChonHinh.setText("Set Picture");
        txtChonHinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChonHinhActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImage)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtChonHinh)
                .addGap(75, 75, 75))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lblImage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtChonHinh)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        buttonGroup1.add(rdbRa);
        rdbRa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdbRa.setText("Đã Xuất Viện");
        rdbRa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbRaActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdbChua);
        rdbChua.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdbChua.setText("Chưa Xuất Viện");

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/new-icon-16.png"))); // NOI18N
        btnNew.setText("Tạo mới");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Save-icon.png"))); // NOI18N
        btnSave.setText("Lưu");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/exit.png"))); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ChinhSua.png"))); // NOI18N
        btnUpdate.setText("Cập Nhật");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        tblBenhAn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tblBenhAn.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblBenhAn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBenhAnMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBenhAn);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("Quản Lý Bệnh Án");

        txtKhoa.setColumns(20);
        txtKhoa.setRows(5);
        jScrollPane2.setViewportView(txtKhoa);

        jLabel9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel9.setText("Khoa");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Tìm Kiếm");

        jComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã Bệnh Án", "Tên Bệnh Nhân", "Người Phụ Trách", "Email", "Khoa", "Tình Trạng" }));
        jComboBox.setSelectedIndex(-1);

        jbtSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search-icon-24.png"))); // NOI18N
        jbtSearch.setText("Tìm Kiếm");
        jbtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSearchActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icon_Reload.png"))); // NOI18N
        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jSeparator1)
            .addComponent(jSeparator3)
            .addComponent(jSeparator2)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(58, 58, 58)
                                .addComponent(txtMaBenhAn, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(jLabel5))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addComponent(jLabel9))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addComponent(jLabel6)))
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMoTa, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtTenBenhNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtNguoiPhuTrach, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(150, 150, 150)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(70, 70, 70)
                                .addComponent(rdbRa)
                                .addGap(37, 37, 37)
                                .addComponent(rdbChua)
                                .addGap(161, 161, 161)
                                .addComponent(btnNew)
                                .addGap(35, 35, 35)
                                .addComponent(btnUpdate)
                                .addGap(33, 33, 33)
                                .addComponent(btnSave)
                                .addGap(35, 35, 35)
                                .addComponent(btnDelete))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8)
                        .addGap(35, 35, 35)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtSearch)
                        .addGap(141, 141, 141)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(413, 413, 413)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(7, 7, 7)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(txtMaBenhAn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jLabel3)
                                .addGap(47, 47, 47)
                                .addComponent(jLabel4)
                                .addGap(49, 49, 49)
                                .addComponent(jLabel5)
                                .addGap(59, 59, 59)
                                .addComponent(jLabel9)
                                .addGap(56, 56, 56)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(txtMoTa, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(txtTenBenhNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(txtNguoiPhuTrach, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(rdbRa)
                            .addComponent(rdbChua))
                        .addGap(36, 36, 36)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbtSearch)
                            .addComponent(jButton1))
                        .addGap(11, 11, 11)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNew)
                            .addComponent(btnUpdate)
                            .addComponent(btnSave)
                            .addComponent(btnDelete))
                        .addGap(360, 360, 360))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void rdbRaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbRaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbRaActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        StringBuilder sb = new StringBuilder();
        DataValidator.validateEmpty(txtMaBenhAn, sb, "Mã Bệnh Án không được để trống !");
        DataValidator.validateEmpty(txtTenBenhNhan, sb, "Tên Bệnh Nhân không được để trống !");

        if (sb.length() > 0) {
            MessagaDialog.showErrorDialog(parentForm, sb.toString(), "Lỗi");
            return;
        }
        try {
            QuanLyBenhAn ba = new QuanLyBenhAn();

            ba.setMaBenhAn(txtMaBenhAn.getText());
            ba.setTenBenhNhan(txtTenBenhNhan.getText());
            ba.setNguoiPhuTrach(txtNguoiPhuTrach.getText());
            ba.setEmail(txtEmail.getText());
            ba.setKhoa(txtKhoa.getText());
            ba.setMoTa(txtMoTa.getText());
            ba.setTinhTrang(rdbRa.isSelected() ? 1 : 0);
            ba.setHinh(personalImage);
            BenhAnDao dao = new BenhAnDao();
            if (dao.insert(ba)) {
                MessagaDialog.showMessageDialog(parentForm, "Bệnh Án đã được lưu !", "Thông báo");
                loadDataToTable();
            } else {
                MessagaDialog.showConfirmDialog(parentForm, "Chưa thể lưu Bệnh Án", "Lỗi");
            }

        } catch (Exception e) {
            e.printStackTrace();
            MessagaDialog.showErrorDialog(parentForm, e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        StringBuilder sb = new StringBuilder();
        DataValidator.validateEmpty(txtMaBenhAn, sb, "Mã Bệnh Án không được để trống !");

        if (sb.length() > 0) {
            MessagaDialog.showErrorDialog(parentForm, sb.toString(), "Lỗi");
            return;
        }
        if (MessagaDialog.showConfirmDialog(parentForm, "Bạn có muốn xóa Bệnh Án không ? ", "Hỏi") == JOptionPane.NO_OPTION) {
            return;
        }

        try {

            BenhAnDao dao = new BenhAnDao();
            if (dao.delete(txtMaBenhAn.getText())) {
                MessagaDialog.showMessageDialog(parentForm, "Bệnh Án đã xóa thành công !", "Thông báo");
                btnNewActionPerformed(evt);
                loadDataToTable();
            } else {
                MessagaDialog.showConfirmDialog(parentForm, "Không thể xóa Bệnh Án hoặc không có Bệnh Án phù hợp được lưu !", "Lỗi");
            }

        } catch (Exception e) {
            e.printStackTrace();
            MessagaDialog.showErrorDialog(parentForm, e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        txtMaBenhAn.setText(Random() + "");
        btnSave.setEnabled(true);
        txtEmail.setText("");
        txtTenBenhNhan.setText("");
        txtMoTa.setText("");
        txtNguoiPhuTrach.setText("");
        txtKhoa.setText("");
        personalImage = null;
        ImageIcon icon = new ImageIcon(getClass().getResource("/Images/Bs.PNG"));
        lblImage.setIcon(icon);
        buttonGroup1.clearSelection();
        jComboBox.setSelectedIndex(-1);
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        StringBuilder sb = new StringBuilder();
        DataValidator.validateEmpty(txtMaBenhAn, sb, "Mã Bệnh Án không được để trống !");
        DataValidator.validateEmpty(txtTenBenhNhan, sb, "Tên Bệnh Nhân không được để trống !");

        if (sb.length() > 0) {
            MessagaDialog.showErrorDialog(parentForm, sb.toString(), "Lỗi");
            return;
        }
        if (MessagaDialog.showConfirmDialog(parentForm, "Bạn có muốn chỉnh sửa dữ liệu Bệnh Án không ? ", "Hỏi") == JOptionPane.NO_OPTION) {
            return;
        }

        try {
            QuanLyBenhAn ba = new QuanLyBenhAn();

            ba.setMaBenhAn(txtMaBenhAn.getText());
            ba.setTenBenhNhan(txtTenBenhNhan.getText());
            ba.setNguoiPhuTrach(txtNguoiPhuTrach.getText());
            ba.setEmail(txtEmail.getText());
            ba.setKhoa(txtKhoa.getText());
            ba.setMoTa(txtMoTa.getText());
            ba.setTinhTrang(rdbRa.isSelected() ? 1 : 0);
            ba.setHinh(personalImage);

            BenhAnDao dao = new BenhAnDao();
            if (dao.update(ba)) {
                MessagaDialog.showMessageDialog(parentForm, "Bệnh Án đã chỉnh sửa thành công !", "Thông báo");
                loadDataToTable();
            } else {
                MessagaDialog.showConfirmDialog(parentForm, "Chưa thể chỉnh sửa Bệnh Án", "Lỗi");
            }
        } catch (Exception e) {
            e.printStackTrace();
            MessagaDialog.showErrorDialog(parentForm, e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tblBenhAnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBenhAnMouseClicked
        try {
            btnSave.setEnabled(false);
            int row = tblBenhAn.getSelectedRow();

            if (row >= 0) {
                String id = (String) tblBenhAn.getValueAt(row, 0);
                BenhAnDao dao = new BenhAnDao();
                QuanLyBenhAn ba = dao.findByID(id);

                if (ba != null) {
                    txtMaBenhAn.setText(ba.getMaBenhAn());
                    txtTenBenhNhan.setText(ba.getTenBenhNhan());
                    txtNguoiPhuTrach.setText(ba.getNguoiPhuTrach());
                    txtEmail.setText(ba.getEmail());
                    txtKhoa.setText(ba.getKhoa());
                    txtMoTa.setText(ba.getMoTa());

                    if ((ba.getTinhTrang() + "").equals("1")) {
                        rdbRa.setSelected(true);
                        rdbChua.setSelected(false);
                    } else {
                        rdbRa.setSelected(false);
                        rdbChua.setSelected(true);
                    }

                    if (ba.getHinh() != null) {
                        Image img = SetImage.createImageFromByteArray(ba.getHinh(), "jpg");
                        lblImage.setIcon(new ImageIcon(img));
                        personalImage = ba.getHinh();

                    } else {
                        personalImage = ba.getHinh();
                        ImageIcon icon = new ImageIcon(getClass().getResource("/Images/Bs.PNG"));
                        lblImage.setIcon(icon);
                    }

                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            MessagaDialog.showErrorDialog(parentForm, e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_tblBenhAnMouseClicked

    private void txtMaBenhAnFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaBenhAnFocusLost
        try {
            BenhAnDao dao = new BenhAnDao();
            QuanLyBenhAn ba = dao.findByID(txtMaBenhAn.getText());
            if (ba != null) {
                txtMaBenhAn.setText(ba.getMaBenhAn());
                txtTenBenhNhan.setText(ba.getTenBenhNhan());
                txtNguoiPhuTrach.setText(ba.getNguoiPhuTrach());
                txtEmail.setText(ba.getEmail());
                txtKhoa.setText(ba.getKhoa());
                txtMoTa.setText(ba.getMoTa());

                if ((ba.getTinhTrang() + "").equals("1")) {
                    rdbRa.setSelected(true);
                    rdbChua.setSelected(false);
                } else {
                    rdbRa.setSelected(false);
                    rdbChua.setSelected(true);
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtMaBenhAnFocusLost

    private void txtChonHinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChonHinhActionPerformed
        //Đọc hình ảnh do người dùng lựa chọn
        JFileChooser chooser = new JFileChooser();
        chooser.setFileFilter(new FileFilter() {
            @Override
            public boolean accept(File f) {
                if (f.isDirectory()) {
                    return true;
                } else {
                    return f.getName().toLowerCase().endsWith(".jpg");
                }
            }

            @Override
            public String getDescription() {
                return "Image File (*.jpg)";
            }
        });

        if (chooser.showOpenDialog(parentForm) == JFileChooser.CANCEL_OPTION) {
            return;
        }

        File file = chooser.getSelectedFile(); //lấy dữ liêuj do người dùng lựa chọn
        try {
            ImageIcon icon = new ImageIcon(file.getPath());
            Image img = SetImage.resize(icon.getImage(), 240, 240);// Điều chỉnh kích thước của hình
            ImageIcon resizedIcon = new ImageIcon(img); // Tạo lại đối tượng để có thể hiển thị lên Jlayble
            lblImage.setIcon(resizedIcon);
            personalImage = SetImage.toByteArray(img, "jpg");
            /* jpg : Định dạng cho phép chuyển dtuong hình ảnh sang mảng các byte lưu vào CSDL, sau đó tái dựng lại hình ảnh trên jlayble
                         Chuyển nội dung của hình được hiệu chỉnh về dạng mang  các Byte */
        } catch (Exception e) {
            e.printStackTrace();
            MessagaDialog.showMessageDialog(parentForm, e.getMessage(), " Lỗi");
        }
    }//GEN-LAST:event_txtChonHinhActionPerformed

    private void jbtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSearchActionPerformed
        try {
            BenhAnDao dao = new BenhAnDao();
            String a;
            if (jComboBox.getSelectedIndex() == 0) {
                a = "MaBenhAn";
            } else if (jComboBox.getSelectedIndex() == 1) {
                a = "TenBenhNhan";
            } else if (jComboBox.getSelectedIndex() == 2) {
                a = "NguoiPhutrach";
            } else if (jComboBox.getSelectedIndex() == 3) {
                a = "Email";
            } else if (jComboBox.getSelectedIndex() == 4) {
                a = "Khoa";
            } else {
                a = "TinhTrang";
            }
            String b = txtSearch.getText();
            List<QuanLyBenhAn> list = new BenhAnDao().findBy(a, b);
            System.out.println("list size = " + list.size());

            if (list.size() != 0) {
                MessagaDialog.showMessageDialog(parentForm, " Đã tìm thấy thông tin phù hợp !", "Thông Báo ");
                try {

                    tblModel.setRowCount(0);

                    for (QuanLyBenhAn it : list) {
                        tblModel.addRow(new Object[]{
                            it.getMaBenhAn(), it.getTenBenhNhan(), it.getNguoiPhuTrach(), it.getEmail(), it.getKhoa(),
                            it.getMoTa(), it.getTinhTrang() == 1 ? "Đã Ra Viện" : "Chưa Ra Viện"
                        });
                    }
                    tblModel.fireTableDataChanged();
                } catch (Exception e) {
                    e.printStackTrace();
                    MessagaDialog.showErrorDialog(parentForm, e.getMessage(), "Lỗi");
                }

                txtMaBenhAnFocusLost(null);
            } else {
                MessagaDialog.showMessageDialog(parentForm, " Không tìm thấy bệnh nhân phù hợp !", "Thông Báo ");
            }
        } catch (Exception e) {
            e.printStackTrace();
            MessagaDialog.showErrorDialog(parentForm, e.getMessage(), "Lỗi");
        }
        /*
                if (ba != null) {
                MessagaDialog.showMessageDialog(parentForm, " Đã tìm thấy bệnh nhân phù hợp !", "Thông Báo ");

                txtMaBenhAn.setText(ba.getMaBenhAn());
                txtTenBenhNhan.setText(ba.getMaBenhAn());
                txtKhoa.setText(ba.getKhoa());
                txtEmail.setText(ba.getEmail());
                txtNguoiPhuTrach.setText(ba.getNguoiPhuTrach());
                txtMoTa.setText(ba.getMoTa());
                if ((ba.getTinhTrang() + "").equals("1")) {
                    rdbRa.setSelected(true);
                    rdbChua.setSelected(false);
                } else {
                    rdbRa.setSelected(false);
                    rdbChua.setSelected(true);
                }

                if (ba.getHinh() != null) {
                    Image img = SetImage.createImageFromByteArray(ba.getHinh(), "jpg");
                    lblImage.setIcon(new ImageIcon(img));
                    personalImage = ba.getHinh();

                } else {
                    personalImage = ba.getHinh();
                    ImageIcon icon = new ImageIcon(getClass().getResource("/Images/Bs.PNG"));
                    lblImage.setIcon(icon);
                }
         */

    }//GEN-LAST:event_jbtSearchActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        txtSearch.setText("");
        loadDataToTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    int Random() {
        Random rd = new Random();
        int random = 10000 + rd.nextInt(89999);
        return random;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JButton jbtSearch;
    private javax.swing.JLabel lblImage;
    private javax.swing.JRadioButton rdbChua;
    private javax.swing.JRadioButton rdbRa;
    private javax.swing.JTable tblBenhAn;
    private javax.swing.JButton txtChonHinh;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextArea txtKhoa;
    private javax.swing.JTextField txtMaBenhAn;
    private javax.swing.JTextField txtMoTa;
    private javax.swing.JTextField txtNguoiPhuTrach;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTenBenhNhan;
    // End of variables declaration//GEN-END:variables
}
